- Class: meta
  Course: Testverfahren
  Lesson: Einfaktorielle Varianzanalyse für unabhängige Stichproben
  Author: Lea Dammann
  Type: Standard
  Organization: PFH Göttingen
  Version: 0.1

  
- Class: text
  Output: In dieser Übung werden wir uns damit beschäftigen, wie einfaktorielle Varianzanalysen für unabhängige Stichproben in R berechnet werden können.
 
- Class: mult_question
  Output: "Bevor wir mit dem Rechnen beginnen: Was ist eine Varianzanalyse eigentlich?"
  AnswerChoices: Ein Verfahren zur Schätzung der Größe von Varianzen; Ein Verfahren zum Vergleich von Mittelwerten; Ein Verfahren für ordinalskalierte Verfahren
  CorrectAnswer: Ein Verfahren zum Vergleich von Mittelwerten
  AnswerTests: omnitest(correctVal="Ein Verfahren zum Vergleich von Mittelwerten")
  Hint: Bei der Varianzanalyse wird zwar das Verhältnis von Varianzen betrachtet, das eigentliche Ziel ist jedoch ein Gruppenvergleich eines anderen Maßes.
  
- Class: cmd_question
  Output: In Ihrem Arbeitsbereich befindet sich ein Datensatz namens Daten, den wir im Folgenden verwenden werden. Machen Sie sich jetzt unter Verwendung der Funktion summary() mit dem Datensatz vertraut.
  CorrectAnswer: summary(Daten)
  AnswerTests: omnitest(correctExpr='summary(Daten)')
  Hint: Tippen Sie summary(Daten) in die Konsole, um zu sehen, wie der Datensatz aufgebaut ist.

- Class: cmd_question
  Output: "Wie viele Variablen hat der Datensatz?"
  CorrectAnswer: 2
  AnswerTests: omnitest(correctVal="2")  
  Hint: Zählen Sie einfach die Variablen und tippen Sie die entsprechende Zahl ein.
  
- Class: mult_question
  Output: "Die Daten geben die Gedächtnisleistung der Probanden unter verschiedenen Untersuchungsbedingungen an. Jeder Proband hat dabei nur an einer Bedingung teilgenommen. Die Gedächtnisleistung wurde in T-Werten angegeben. T-Werte sind standardisierte Werte. Hier wurden die Werte an einer Normpopulation standardisiert - wundern Sie sich also nicht, wenn die Standardabweichung und der Mittelwert in den Daten dieser fiktiven Stichprobe nicht exakt denen von T-Werten entsprechen. Apropos: Welche Standardabweichung und welchen Mittelwert haben T-Werte?"
  AnswerChoices: Mittelwert 50 und Standardabweichung 10; Mittelwert 50 und Standardabweichung 20; Mittelwert 100 und Standardabweichung 15
  CorrectAnswer: Mittelwert 50 und Standardabweichung 10
  AnswerTests: omnitest(correctVal="Mittelwert 50 und Standardabweichung 10")
  Hint: Bei einer normalverteilten Variablen würden ca. 68% der T-Werte zwischen 40 und 60 liegen.
  
- Class: mult_question
  Output: "Unter welchen Bedingungen wurde die Gedächtnisleistung untersucht?"
  AnswerChoices: Stille, Lärm und Musik; Stille, Lärm und Hintergrundgespräche; Stille und Lärm
  CorrectAnswer: Stille, Lärm und Musik
  AnswerTests: omnitest(correctVal="Stille, Lärm und Musik")
  Hint: Gesucht sind die Faktorstufen der Variablen Gruppe.
  
- Class: text
  Output: Uns interessiert, ob es signifikante Unterschiede in der Erinnerungsleistung zwischen den verschiedenen Gruppen gibt. Für diese Fragestellung bietet sich die einfaktorielle Varianzanalyse an.
  
- Class: mult_question
  Output: "Bei der einfaktoriellen Varianzanalyse gibt es zwei interessierende Variablen. Den Faktor, d.h. die unabhängige Variable, und die abhängige Variable. Welche Variable ist in unserem Beispiel was?"
  AnswerChoices: Gruppe ist der Faktor und Erinnerung ist die abhängige Variable; Erinnerung ist der Faktor und Gruppe ist die abhängige Variable
  CorrectAnswer: Gruppe ist der Faktor und Erinnerung ist die abhängige Variable
  AnswerTests: omnitest(correctVal="Gruppe ist der Faktor und Erinnerung ist die abhängige Variable") 
  Hint: Der Faktor ist immer die Variable, die vom Untersuchungsleiter manipuliert wird.

- Class: cmd_question
  Output: 'Kommen wir nun zur eigentlichen Berechnung. Dafür benötigen wir das Paket ez. Wenn Sie das Paket noch nicht installiert haben, geben Sie install.packages("ez") in die Konsole ein. Wenn Sie das Paket bereits installiert haben, können Sie diesen Teil mit skip() überspringen.'
  CorrectAnswer: 0
  AnswerTests: any_of_exprs('install.packages("ez")',0)  
  Hint: 'Tippen Sie entweder install.packages("ez") oder skip().'
  
- Class: cmd_question
  Output: 'Laden Sie nun das Paket, indem Sie library(ez) in die Konsole eingeben.'
  CorrectAnswer: library(ez)
  AnswerTests: omnitest(correctExpr='library(ez)')
  Hint: Geben Sie library(ez) in die Konsole ein.
  
- Class: cmd_question
  Output: 'Die für uns relevante Funktion ist ezANOVA(). Schauen Sie sich zuerst die Hilfeseite dieser Funktion an.'
  CorrectAnswer: ?ezANOVA
  AnswerTests: omnitest(correctExpr='?ezANOVA')
  Hint: Tippen Sie ?ezANOVA in die Konsole, um die Hilfeseite aufzurufen.
  
- Class: text
  Output: "Wie Sie sehen, gibt es viele Argumente, mit denen die Funktion ezANOVA spezifiziert werden kann. Wir werden uns erst einmal auf die folgenden vier Argumente konzentrieren: dv, between, data und wid."
  
- Class: mult_question
  Output: 'Das Argument dv steht für "dependent variable", d.h. für die abhängige Variable. Was müssten Sie dementsprechend im ezANOVA-Befehl angeben?'
  AnswerChoices: dv = Erinnerung; dv = Gruppe; dv = "Erinnerung"; dv = "Gruppe"
  CorrectAnswer: dv = Erinnerung
  AnswerTests: omnitest(correctVal='dv = Erinnerung')
  Hint: Die Variablen dürfen nicht als Zeichenketten angegeben werden, sondern müssen ohne Anführungszeichen stehen.
  
- Class: mult_question
  Output: 'Bei der Varianzanalyse für unabhängige Stichproben kann über das Argument between die unabhängige Variable bzw. der Faktor angegeben werden. Welche der folgenden Alternativen ist demnach richtig?'
  AnswerChoices: between = Erinnerung; between = Gruppe; between = "Erinnerung"; between = "Gruppe"
  CorrectAnswer: between = Gruppe
  AnswerTests: omnitest(correctVal='between = Gruppe')
  Hint: Die Variablen dürfen nicht als Zeichenketten angegeben werden, sondern müssen ohne Anführungszeichen stehen.
  
- Class: mult_question
  Output: 'Das Argument data bezeichnet - wie Sie möglicherweise schon erraten haben - den Datensatz, der verwendet werden soll. Wie müsste dieser Teilbefehl in unserem Beispiel lauten?'
  AnswerChoices: data = Daten; data = "Daten"; data = c(Erinnerung, Gruppe); data = Erinnerung und Gruppe
  CorrectAnswer: data = Daten
  AnswerTests: omnitest(correctVal='data = Daten')
  Hint: Den Namen unseres Datensatzes finden Sie in R Studio im rechten oberen Feld unter Environment.
  
- Class: text
  Output: 'Dem Argument wid muss eine fortlaufende Probandennummer übergeben werden. Da diese in unserem Datensatz nicht existiert, müssen wir sie zuerst erstellen. Dazu erstellen wir einen Vektor namens ProbNR, der unsere Probanden durchnummeriert.'
 
- Class: cmd_question 
  Output: 'Erinnern Sie sich daran, dass Sie mit x <- 1:4 einen Vektor x mit den Zahlen von eins bis vier erstellen können. Erstellen Sie äquivalent den Vektor ProbNR mit den Zahlen von 1 bis 30.'
  CorrectAnswer: ProbNR <- 1:30
  AnswerTests: omnitest(correctExpr='ProbNR <- 1:30')
  Hint: Tippen Sie ProbNR <- 1:30 in die Konsole um den Vektor zu erstellen.
  
- Class: cmd_question 
  Output: 'Was machen wir, wenn wir vergessen haben, wie viele Probanden unser Datensatz enthält? Am einfachsten ist es, die Funktion length auf den Faktor oder die abhängige Variable anzuwenden. So ist das Ergebnis von length(Daten$Gruppe) dreißig, entspricht also der Anzahl unserer Probanden. Nutzen Sie diesen Befehl, um den Vektor ProbNR erneut zu erstellen.'
  CorrectAnswer: ProbNR <- 1:length(Daten$Gruppe)
  AnswerTests: omnitest(correctExpr='ProbNR <- 1:length(Daten$Gruppe)')
  Hint: Tippen Sie ProbNR <- 1:length(Daten$Gruppe) in die Konsole um den Vektor zu erstellen. 

- Class: cmd_question 
  Output: 'Für die Varianzanalyse muss die Probandennummer als Faktor vorliegen. Wandeln Sie den numerischen Vektor ProbNR in einen Faktor um, indem Sie den Befehl ProbNR <- factor(ProbNr) verwenden.'
  CorrectAnswer: ProbNR <- factor(ProbNR)
  AnswerTests: omnitest(correctExpr='ProbNR <- factor(ProbNR)')
  Hint: Tippen Sie ProbNR <- factor(ProbNR) in die Konsole.  
  
- Class: cmd_question 
  Output: 'Bevor wir den Vektor in den Datensatz integrieren, schauen Sie sich den Vektor ProbNR einmal an.'
  CorrectAnswer: ProbNR
  AnswerTests: omnitest(correctExpr='ProbNR')
  Hint: Tippen Sie ProbNR in die Konsole um den Inhalt des Vektors zu sehen. 

- Class: text
  Output: 'Um den neuen Vektor in den Datensatz zu integrieren, können wir folgenden Befehl verwenden: Datensatzname$Variablenname <- Variable, d.h. in unserem Fall Daten$ProbNR <- ProbNR.'
  
- Class: cmd_question 
  Output: 'Die Erstellung des Vektors und das Integrieren in den vorhandenen Datensatz lassen sich auch in einem Befehl verbinden. In unserem Fall würde das so aussehen: Daten$ProbNR <- factor(1:length(Daten$Gruppe)). Probieren Sie diesen Befehl einmal aus.'
  CorrectAnswer: Daten$ProbNR <- factor(1:length(Daten$Gruppe))
  AnswerTests: omnitest(correctExpr='Daten$ProbNR <- factor(1:length(Daten$Gruppe))')
  Hint: Tippen Sie Daten$ProbNR <- factor(1:length(Daten$Gruppe)) in die Konsole um den Vektor zu erstellen. 
  
- Class: text
  Output: 'Nachdem wir nun den Vektor ProbNR mit einer fortlaufenden Probandennummer erstellt haben, können wir auch das Argument wid spezifizieren: wid=ProbNR'
  
- Class: cmd_question 
  Output: 'Jetzt sind wir so weit, dass wir die erste Varianzanalyse rechnen können! Verwenden Sie den Befehl ezANOVA() und die vier zuvor besprochenen Argumente dv, between, data und wid. Erinnern Sie sich daran, dass Sie die einzelnen Teilbefehle mit Kommata voneinander trennen müssen. Wie lautet demnach der vollständige Befehl für unsere Varianzanalyse?'
  CorrectAnswer: ezANOVA(dv=Erinnerung, between=Gruppe, data=Daten, wid=ProbNR)
  AnswerTests: omnitest(correctExpr='ezANOVA(dv=Erinnerung, between=Gruppe, data=Daten, wid=ProbNR)')
  Hint: 'Vervollständigen Sie folgenden Befehl: ezANOVA(dv=Erinnerung, between=Gruppe, data= ... , wid= ...)'
 
- Class: cmd_question 
  Output: 'Geben Sie anhand des Outputs den p-Wert der Varianzanalyse (in voller Länge) an.'
  CorrectAnswer: 0.0009991671
  AnswerTests: omnitest(correctVal='0.0009991671')
  Hint: 'Den p-Wert der Varianzanalyse finden Sie in der 5. Spalte der Tabelle "Anova". Die zweite Tabelle für den Levene-Test schauen wir uns später an.'
  
- Class: mult_question
  Output: 'Der p-Wert gibt an, wie wahrscheinlich ein gleiches oder extremeres Ergebnis unter Gültigkeit der Nullhypothese wäre. Anhand des p-Wertes kann auch beantwortet werden, ob ein signifikantes Ergebnis vorliegt. Welche Interpretation ist in unserem Fall richtig?'
  AnswerChoices: Die Gruppen unterscheiden sich in Ihrer Erinnerungsleistung signifikant voneinander.; Die Gruppen unterscheiden sich in Ihrer Erinnerungsleistung nicht signifikant voneinander.
  CorrectAnswer: Die Gruppen unterscheiden sich in Ihrer Erinnerungsleistung signifikant voneinander.
  AnswerTests: omnitest(correctVal='Die Gruppen unterscheiden sich in Ihrer Erinnerungsleistung signifikant voneinander.')
  Hint: Wenn der p-Wert kleiner 0.05 ist, spricht man von einem signifikanten Ergebnis.
  
- Class: text
  Output: 'Die Frage, ob die Varianzanalyse bei einem alpha-Niveau von 5% signifikant ist, kann auch durch einen kurzen Blick auf die Spalte p<.05 beantwortet werden. Ist hier ein Sternchen (*) zu sehen, ist die Varianzanalyse signifikant.'  

- Class: mult_question
  Output: 'Weitere wichtige Kennwerte, die von R ausgegeben werden, sind der F-Wert und die Freiheitsgrade. Welche der folgenden Werte sind richtig?'
  AnswerChoices: Der F-Wert beträgt 9.02, der Zählerfreiheitsgrad 27 und der Nennerfreiheitsgrad 2.; Der F-Wert beträgt 9.02, der Zählerfreiheitsgrad 2 und der Nennerfreiheitsgrad 27.; Der F-Wert beträgt 0.40, der Zählerfreiheitsgrad 27 und der Nennerfreiheitsgrad 2.
  CorrectAnswer: Der F-Wert beträgt 9.02, der Zählerfreiheitsgrad 2 und der Nennerfreiheitsgrad 27.
  AnswerTests: omnitest(correctVal='Der F-Wert beträgt 9.02, der Zählerfreiheitsgrad 2 und der Nennerfreiheitsgrad 27.')
  Hint: Der Zählerfreiheitsgrad wird auch mit df_between, der Nennerfreiheitsgrad mit df_within bezeichnet.
 
- Class: mult_question
  Output: 'Bei der einfaktoriellen Varianzanalyse berechnet R automatisch den Levene-Test. Mit diesem kann überprüft werden, ob Varianzhomogenität gegeben ist. Welche der folgenden Aussagen bzgl. des Levene-Tests stimmt?'
  AnswerChoices: Der Levene-Test ist signifikant und es besteht somit Varianzhomogenität.; Der Levene-Test ist signifikant und es besteht somit keine Varianzhomogenität.; Der Levene-Test ist nicht signifikant und es besteht somit Varianzhomogenität.; Der Levene-Test ist nicht signifikant und es besteht somit auch keine Varianzhomogenität.
  CorrectAnswer: Der Levene-Test ist nicht signifikant und es besteht somit Varianzhomogenität.
  AnswerTests: omnitest(correctVal='Der Levene-Test ist nicht signifikant und es besteht somit Varianzhomogenität.')
  Hint: Wenn der Levene-Test signifikant ist, ist die Varianzhomogenität nicht gegeben. 
  
- Class: text
  Output: 'Varianzhomogenität ist eine der Voraussetzungen der Varianzanalyse. Wäre diese nicht gegeben, müsste die Varianzanalyse mit dem zusätzlichen Argument white.adjust=TRUE neu berechnet werden, sodass eine Korrektur des Verfahrens für heterogene Varianzen erfolgt. Der entsprechende Befehl würde dann ezANOVA(dv=Erinnerung, between=Gruppe, data=Daten, wid=ProbNR, white.adjust=TRUE) lauten.'  
  
- Class: cmd_question 
  Output: 'Abschließend wollen wir uns noch zwei weitere Argumente des ezANOVA-Befehls ansehen. Das Argument detailed=TRUE bzw. detailed=FALSE bestimmt, wie viele Informationen R ausgibt. Wenn Sie der Funktion ezANOVA das Argument detailed=TRUE hinzufügen, stehen im Output auch die Quadratsummen, die für die Berechnung des F-Wertes benötigt werden. Schauen Sie sich diesen erweiterten Output jetzt an.'
  CorrectAnswer: ezANOVA(dv=Erinnerung, between=Gruppe, data=Daten, wid=ProbNR, detailed=TRUE)
  AnswerTests: omnitest(correctExpr='ezANOVA(dv=Erinnerung, between=Gruppe, data=Daten, wid=ProbNR, detailed=TRUE)')
  Hint: 'Der notwendige Befehl lautet: ezANOVA(dv=Erinnerung, between=Gruppe, data=Daten, wid=ProbNR, detailed=TRUE)'
 
- Class: text 
  Output: 'Durch das Argument type kann bestimmt werden, wie die Quadratsummen berechnet werden sollen. Wenn Sie das Argument nicht extra angeben, wird der Berechnungstyp 2 verwendet. Da im Fall von unbalancierten Versuchsplänen der Berechnungstyp 3 vorzuziehen ist und dieser im Fall der einfaktoriellen Varianzanalyse zu denselben Ergebnissen wie der Berechnungstyp 2 führt, ist es zu empfehlen, immer type=3 zu wählen.'
 
- Class: cmd_question 
  Output: 'Wird sowohl type=3 als auch detailed=TRUE gewählt, erhalten Sie auch Information über die Signifikanz des Achsenabschnitts der zugrundeliegenden Strukturgleichung. Tippen Sie ezANOVA(dv=Erinnerung, between=Gruppe, data=Daten, wid=ProbNR, detailed=TRUE, type=3) in die Konsole und sehen Sie sich den Output an.'
  CorrectAnswer: ezANOVA(dv=Erinnerung, between=Gruppe, data=Daten, wid=ProbNR, detailed=TRUE, type=3)
  AnswerTests: omnitest(correctExpr='ezANOVA(dv=Erinnerung, between=Gruppe, data=Daten, wid=ProbNR, detailed=TRUE, type=3)')
  Hint: 'Der notwendige Befehl lautet: ezANOVA(dv=Erinnerung, between=Gruppe, data=Daten, wid=ProbNR, detailed=TRUE, type=3)'
  
- Class: text 
  Output: 'In der ersten Zeile finden Sie die Testwerte für den Achsenabschnitt, in der 2. Zeile finden Sie die bereits besprochenen Testwerte für den Effekt unseres Faktors Gruppe. In unserem Fall ist also sowohl der Achsenabschnitt als auch der Effekt des Faktors Gruppe signifikant verschieden von 0.'
  
- Class: text
  Output: 'In diesem Kapitel haben Sie gelernt, wie einfaktorielle Varianzanalysen für unabhängige Gruppen in R berechnet werden können und wie der Output zu interpretieren ist.'
